let f=0,a=[];function p(){return f+=1,()=>{if(f-=1,f===0){let t=a;a=[];for(let i of t)i()}}}let c=Symbol(),O=(t,i,n,e)=>{let u={...t};u.set=(...l)=>{t[c]=i,t.set(...l),delete t[c]},t.setKey&&(u.setKey=(...l)=>{t[c]=i,t.setKey(...l),delete t[c]});let o=n(u,...e);if(o instanceof Promise){let l=p();return o.finally(l)}return o},g=(t,i,n)=>(...e)=>O(t,i,n,e),r=[],v=t=>{let i,n=[],e={lc:0,value:t,set(u){e.value=u,e.notify()},get(){return e.lc||e.listen(()=>{})(),e.value},notify(u){i=n;let o=!r.length;for(let l=0;l<i.length;l++)r.push(i[l],e.value,u);if(o){for(let l=0;l<r.length;l+=3)r[l](r[l+1],r[l+2]);r.length=0}},listen(u){return n===i&&(n=n.slice()),e.lc=n.push(u),()=>{n===i&&(n=n.slice());let o=n.indexOf(u);~o&&(n.splice(o,1),e.lc--)}},subscribe(u){let o=e.listen(u);return u(e.value),o},off(){}};return e};const s=v({isOpen:!1});function d(){const t=g(s,"toggleMenu",()=>{s.set({isOpen:!s.get().isOpen}),console.log(s.get())}),i=g(s,"toggleMenu",()=>{s.set({isOpen:!s.get().isOpen}),console.log(s.get())}),n=g(s,"toggleMenu",()=>{s.set({isOpen:!s.get().isOpen}),console.log(s.get())}),e=g(s,"isOpen",()=>s.get().isOpen);return{toggleMenu:t,closeMenu:n,openMenu:i,menuState:s,isOpen:e}}export{d as u};
